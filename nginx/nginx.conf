user              nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$proxy_protocol_addr [$time_local] "$request" $status $body_bytes_sent';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  dardic.net;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            return 301 https://www.$host$request_uri;
        }

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page  500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   /usr/share/nginx/html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       80;
        server_name  www.dardic.net;

        location / {
            return 301 https://$host$request_uri;
        }

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }

    server {
        listen       443  ssl;
        server_name  dardic.net;

        ssl_certificate      /etc/letsencrypt/live/dardic.net/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/dardic.net/privkey.pem;

        include      /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam  /etc/letsencrypt/ssl-dhparams.pem;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            return 301 https://www.$host$request_uri;
        }
    }

    server {
        listen       443  ssl;
        server_name  dardic.net  www.dardic.net;

        ssl_certificate      /etc/letsencrypt/live/dardic.net/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/dardic.net/privkey.pem;

        include      /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam  /etc/letsencrypt/ssl-dhparams.pem;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            root   /var/www/nginx;
            index  index.html;
        }
    }
}
